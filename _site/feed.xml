<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>j1111011 Pages</title>
    <description>Welcome to my sites.
</description>
    <link>http://j1111011.github.io/</link>
    <atom:link href="http://j1111011.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 23 Sep 2016 10:51:44 +0800</pubDate>
    <lastBuildDate>Fri, 23 Sep 2016 10:51:44 +0800</lastBuildDate>
    <generator>Jekyll v3.1.2</generator>
    
      <item>
        <title>build android live555</title>
        <description>&lt;h1 id=&quot;step-1-generate-android-standalone-toolchian&quot;&gt;step 1. generate android standalone-toolchian.&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;$$NDK_HOME/build/tools/make-standalone-toolchain.sh --platform=android-5 --install-dir=/tmp/my-android-toolchain [ --arch=x86 ]

$export PATH=$PATH:/tmp/my-android-toolchain/bin

--arch defalut arm
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;step-2-generate-android-x86-makefiles&quot;&gt;step 2. generate android-x86 Makefiles.&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;$copy config.armlinux config.android-x86
$vi config.android-x86 
COMPILE_OPTS =		$(INCLUDES) -fPIE -I. -O2 -DSOCKLEN_T=socklen_t -D_LARGEFILE_SOURCE=1 -D_FILE_OFFSET_BITS=32
C =			c
C_COMPILER =		i686-linux-android-gcc
C_FLAGS =		$(COMPILE_OPTS)
CPP =			cpp
CPLUSPLUS_COMPILER =	i686-linux-android-c++
CPLUSPLUS_FLAGS =	$(COMPILE_OPTS) -Wall -DBSD=1
OBJ =			o
LINK =			i686-linux-android-c++ -o
LINK_OPTS =		-L. -fPIE -pie
CONSOLE_LINK_OPTS =	$(LINK_OPTS)
LIBRARY_LINK =		i686-linux-android-ar cr 
LIBRARY_LINK_OPTS =	
LIB_SUFFIX =			a
LIBS_FOR_CONSOLE_APPLICATION =
LIBS_FOR_GUI_APPLICATION =
EXE =

$./genMakefiles android-x86
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;step-3-compile&quot;&gt;step 3. compile&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;$ make 
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Tue, 20 Sep 2016 09:49:36 +0800</pubDate>
        <link>http://j1111011.github.io/2016/09/20/build-android-live555.html</link>
        <guid isPermaLink="true">http://j1111011.github.io/2016/09/20/build-android-live555.html</guid>
        
        <category>android</category>
        
        <category>live555</category>
        
        <category>standalone-toolchain</category>
        
        
      </item>
    
      <item>
        <title>向现有EXE文件中加入 以管理员权限运行（UAC） 权限</title>
        <description>&lt;h1 id=&quot;xml-youpamgramexeintermediatemanifest&quot;&gt;先编写一个 XML ，以这个命名$YOU_PAMGRAM.exe.intermediate.manifest&lt;/h1&gt;
&lt;p&gt;往文件写入以下内容&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;	&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;#39;1.0&amp;#39; encoding=&amp;#39;UTF-8&amp;#39; standalone=&amp;#39;yes&amp;#39;?&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;assembly&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;urn:schemas-microsoft-com:asm.v1&amp;#39;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;manifestVersion=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;1.0&amp;#39;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	  &lt;span class=&quot;nt&quot;&gt;&amp;lt;trustInfo&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;urn:schemas-microsoft-com:asm.v3&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	    &lt;span class=&quot;nt&quot;&gt;&amp;lt;security&amp;gt;&lt;/span&gt;
	      &lt;span class=&quot;nt&quot;&gt;&amp;lt;requestedPrivileges&amp;gt;&lt;/span&gt;
	        &lt;span class=&quot;nt&quot;&gt;&amp;lt;requestedExecutionLevel&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;level=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;requireAdministrator&amp;#39;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uiAccess=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;false&amp;#39;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
	      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/requestedPrivileges&amp;gt;&lt;/span&gt;
	    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/security&amp;gt;&lt;/span&gt;
	  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/trustInfo&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/assembly&amp;gt;&lt;/span&gt;

	&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;vs2010--&quot;&gt;打开 VS2010 的 命令行&lt;/h1&gt;

&lt;p&gt;使用MT将以上文件编入程序，该程序就具备以管理员权限运行权限&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mt.exe -manifest $YOU_PAMGRAM.exe.intermediate.manifest -outputresource:$YOU_PAMGRAM.exe;#1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;备注：$YOU_PAMGRAM 是你对应的程序名称&lt;/p&gt;
</description>
        <pubDate>Wed, 15 Jun 2016 09:46:40 +0800</pubDate>
        <link>http://j1111011.github.io/2016/06/15/add-uac-to-samplesexe.html</link>
        <guid isPermaLink="true">http://j1111011.github.io/2016/06/15/add-uac-to-samplesexe.html</guid>
        
        <category>uac</category>
        
        <category>requireAdministrator</category>
        
        
      </item>
    
      <item>
        <title>build arm qt5.5</title>
        <description>&lt;h1 id=&quot;step1-install-requirements&quot;&gt;step1 install Requirements&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install build-essential perl python git
sudo apt-get install &quot;^libxcb.&#39;&#39;&#39;&quot; libx11-xcb-dev libglu1-mesa-dev libxrender-dev
sudo apt-get install flex bison gperf libicu-dev libxslt-dev ruby
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;step2-build-arm-icu&quot;&gt;step2 build arm icu&lt;/h1&gt;

&lt;p&gt;How To Cross Compile ICU&lt;/p&gt;

&lt;p&gt;This section will explain how to build ICU on one platform, but to produce binaries intended to run on another. This is commonly known as a cross compile.&lt;/p&gt;

&lt;p&gt;Normally, in the course of a build, ICU needs to run the tools that it builds in order to generate and package data and test-data.In a cross compilation setting, ICU is built on a different system from that which it eventually runs on. An example might be, if you are building for a small/headless system (such as an embedded device), or a system where you can’t easily run the ICU command line tools (any non-UNIX-like system).&lt;/p&gt;

&lt;p&gt;To reduce confusion, we will here refer to the “A” and the “B” system.System “A” is the actual system we will be running on- the only requirements on it is are it is able to build ICU from the command line targetting itself (with configure or runConfigureICU), and secondly, that it also contain the correct toolchain for compiling and linking for the resultant platform, referred to as the “B” system.&lt;/p&gt;

&lt;p&gt;The autoconf docs use the term “build” for A, and “host” for B. More details at: http://www.gnu.org/software/autoconf/manual/html_node/Specifying-Names.html&lt;/p&gt;

&lt;p&gt;Three initially-empty directories will be used in this example:&lt;/p&gt;

&lt;p&gt;/icu
a copy of the ICU source&lt;/p&gt;

&lt;p&gt;/buildA
an empty directory, it will contain ICU built for A
(MacOSX in this case)&lt;/p&gt;

&lt;p&gt;/buildB
an empty directory, it will contain ICU built for B
(HaikuOS in this case) 
1.Check out or unpack the ICU source code into the /icu directory.You will have the directories /icu/source, etc.
2.Build ICU in /buildA normally (using runConfigureICU or configure): cd /buildA
sh /icu/source/runConfigureICU MacOSX
gnumake&lt;/p&gt;

&lt;p&gt;3.Set PATH or other variables as needed, such as CPPFLAGS.
4.Build ICU in /buildB&lt;/p&gt;

&lt;p&gt;”–with-cross-build” takes an absolute path.
cd /buildB
sh /icu/source/configure –host=arm-linux-gnueabi –with-cross-build=/buildA
gnumake&lt;/p&gt;

&lt;p&gt;5.Tests and testdata can be built with “gnumake tests”.&lt;/p&gt;

&lt;h1 id=&quot;step3-build-qt55&quot;&gt;step3 build qt5.5&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;#cd $QT_SRC_DIR
#./configure -xplatform linux-arm-gnueabi-g++ -confirm-license -opensource -release -shared -prefix $TOOLCHAIN_HOME -no-c++11 -nomake tests -nomake examples
#make -j 8 
#make install
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Wed, 15 Jun 2016 09:23:25 +0800</pubDate>
        <link>http://j1111011.github.io/2016/06/15/build-arm-qt55.html</link>
        <guid isPermaLink="true">http://j1111011.github.io/2016/06/15/build-arm-qt55.html</guid>
        
        
      </item>
    
      <item>
        <title>set windows system environment</title>
        <description>&lt;h1 id=&quot;section&quot;&gt;添加系统变量&lt;/h1&gt;

&lt;p&gt;Windows 提供了API函数SetEnvironmentVariable，不过这个函数只能修改当前进程的环境变量，而不能修改其他进程和系统的变量。
要修改系统的环境变量，需要修改注册表SYSTEM\CurrentControlSet\Control\Session Manager\Environment搜索下的项,在下面增加一个字项就可以了。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;	&lt;span class=&quot;c1&quot;&gt;// system environment&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;QSettings&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;HKEY_LOCAL_MACHINE&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;SYSTEM&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;CurrentControlSet&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Control&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Session Manager&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Environment&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QSettings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NativeFormat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;K&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;V&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// user environment&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;QSettings&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;HKEY_CURRENT_USER&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Environment&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QSettings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NativeFormat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;K&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;V&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;cmd&quot;&gt;隐藏CMD窗口&lt;/h1&gt;

&lt;p&gt;由于写了一个控制台程序，需要不显示窗口，搜索到：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;	&lt;span class=&quot;cp&quot;&gt;#pragma comment(linker, &amp;quot;/subsystem:\&amp;quot;windows\&amp;quot; /entry:\&amp;quot;mainCRTStartup\&amp;quot;&amp;quot;)&lt;/span&gt;
	&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;使用这一句，可以隐藏&lt;/p&gt;

&lt;h1 id=&quot;qt&quot;&gt;QT的程序增加管理员权限。&lt;/h1&gt;
&lt;p&gt;在pro文件中增加：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;	&lt;span class=&quot;n&quot;&gt;QMAKE_LFLAGS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;MANIFESTUAC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;level=&amp;#39;requireAdministrator&amp;#39;uiAccess=&amp;#39;false&amp;#39;&amp;quot;&lt;/span&gt;
	&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Sat, 28 May 2016 11:45:18 +0800</pubDate>
        <link>http://j1111011.github.io/2016/05/28/set-windows-system-env.html</link>
        <guid isPermaLink="true">http://j1111011.github.io/2016/05/28/set-windows-system-env.html</guid>
        
        <category>windows</category>
        
        <category>setenv</category>
        
        
      </item>
    
      <item>
        <title>Build mips openssl</title>
        <description>&lt;p&gt;这2天折腾编译路由器一个应用程序，程序代码依赖了OpenSSL。尝试编译它，折腾好久，最终找到一个靠谱的方法。&lt;/p&gt;

&lt;p&gt;下载源码后，使用&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#./Configure linux-mips32 --cross-compile-prefix=mipsel-buildroot-linux-uclibc- --prefix=/opt/buildroot-gcc463/usr/mipsel-buildroot-linux-uclibc/sysroot/usr/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#make
#make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;编译起来还是蛮方便的&lt;/p&gt;

&lt;p&gt;推荐一个博客,里面有编译一些开源库的方法&lt;a href=&quot;http://blog.csdn.net/zjg555543/article/details/7520936&quot;&gt;mips交叉编译开源库&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 12 Apr 2016 14:15:01 +0800</pubDate>
        <link>http://j1111011.github.io/2016/04/12/build-mips-openssl.html</link>
        <guid isPermaLink="true">http://j1111011.github.io/2016/04/12/build-mips-openssl.html</guid>
        
        <category>cross-platform</category>
        
        <category>mips</category>
        
        <category>openssl</category>
        
        
      </item>
    
      <item>
        <title>Android Studio区别编译Debug|Release版本</title>
        <description>&lt;h2 id=&quot;android-studiodebugrelease&quot;&gt;Android Studio区别编译Debug|Release版本&lt;/h2&gt;

&lt;p&gt;之前用C++，系统有个预设宏，可以直接用来判断Debug,Release版本，最近在弄个Android项目，用了AS发现，Gradle还是蛮方便的，只要做如下设置&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;	 &lt;span class=&quot;n&quot;&gt;buildTypes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	        &lt;span class=&quot;n&quot;&gt;release&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	            &lt;span class=&quot;n&quot;&gt;buildConfigField&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;boolean&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;IsAlpha&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;false&amp;quot;&lt;/span&gt;
	            &lt;span class=&quot;n&quot;&gt;minifyEnabled&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;true&lt;/span&gt;
	            &lt;span class=&quot;n&quot;&gt;proguardFiles&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getDefaultProguardFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;proguard-android.txt&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;proguard-rules.pro&amp;#39;&lt;/span&gt;
	        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	        &lt;span class=&quot;n&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	            &lt;span class=&quot;n&quot;&gt;buildConfigField&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;boolean&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;IsAlpha&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;
	        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;在指定目录下会生成以下文件 build\generated\source\buildConfig\debug\com\example\BuildConfig.java (com\example 为你的应用包名）&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BuildConfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DEBUG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Boolean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseBoolean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;APPLICATION_ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;com.example&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BUILD_TYPE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FLAVOR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VERSION_CODE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VERSION_NAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	  &lt;span class=&quot;c1&quot;&gt;// Fields from build type: debug&lt;/span&gt;
	  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IsAlpha&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;设置成功之后，IsAlpha会根据你不同的编译目标，生成不同的值。你就可以在你的代码里调用&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BuildConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;IsAlpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
		&lt;span class=&quot;c1&quot;&gt;//...&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;进行区别初始化，编译APP啦&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/tt_mc/p/4277180.html&quot; title=&quot;详见参考资料&quot;&gt;参考资料&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Mar 2016 11:47:23 +0800</pubDate>
        <link>http://j1111011.github.io/build/2016/03/17/gradle-buildtypes.html</link>
        <guid isPermaLink="true">http://j1111011.github.io/build/2016/03/17/gradle-buildtypes.html</guid>
        
        <category>gradle</category>
        
        <category>android studio</category>
        
        <category>debug</category>
        
        <category>release</category>
        
        
        <category>build</category>
        
      </item>
    
      <item>
        <title>AssSDK 集成方法及环境配置 </title>
        <description>&lt;h3 id=&quot;http7xrgjrcom1z0glbclouddncomasssdk-releaseaar-aar&quot;&gt;请点击 &lt;a href=&quot;http://7xrgjr.com1.z0.glb.clouddn.com/asssdk-release.aar&quot;&gt;下载&lt;/a&gt; AAR库&lt;/h3&gt;

&lt;h3 id=&quot;aar&quot;&gt;选择导入AAR库&lt;/h3&gt;

&lt;p&gt;从Android Studio以下Menu导入库包
File-&amp;gt;New-&amp;gt;New Moudle-&amp;gt;Import .JAR/.AAR package&lt;/p&gt;

&lt;p&gt;如下图所示：&lt;/p&gt;

&lt;p&gt;图1：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xrgjr.com1.z0.glb.clouddn.com/import_arr_1.png&quot; alt=&quot;图1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图2：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xrgjr.com1.z0.glb.clouddn.com/import_arr_2.png&quot; alt=&quot;图2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;选择我们的asssdk-release.aar包，并导入&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;配置环境&lt;/h3&gt;

&lt;p&gt;在APP的gradle.build&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;	&lt;span class=&quot;n&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	    &lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileTree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;*.jar&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;libs&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	    &lt;span class=&quot;n&quot;&gt;testCompile&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;junit:junit:4.12&amp;#39;&lt;/span&gt;	    
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;之中加入&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;	&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;com.google.code.gson:gson:2.4&amp;#39;&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;com.mcxiaoke.volley:library:1.0.19&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;:asssdk-release&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;在入口函数加入集成代码：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;	&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.yiba.asssdk.AssSdkSettings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Activity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	
	    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
	    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	        &lt;span class=&quot;n&quot;&gt;setContentView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;activity_main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	        &lt;span class=&quot;n&quot;&gt;AssSdkSettings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAppName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;sdkdemo&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	        &lt;span class=&quot;n&quot;&gt;AssSdkSettings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAppVersion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;1.0.0&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	        &lt;span class=&quot;n&quot;&gt;AssSdkSettings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;StartService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getApplicationContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
	    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;section-1&quot;&gt;编译生成&lt;/h3&gt;
</description>
        <pubDate>Tue, 08 Mar 2016 13:52:59 +0800</pubDate>
        <link>http://j1111011.github.io/2016/03/08/easssdk-integration.html</link>
        <guid isPermaLink="true">http://j1111011.github.io/2016/03/08/easssdk-integration.html</guid>
        
        
      </item>
    
      <item>
        <title>折腾了好久，最终还是使用jekyll</title>
        <description>&lt;h2 id=&quot;section&quot;&gt;折腾&lt;/h2&gt;
&lt;p&gt;折腾了好久jekyllbootstrap，被CSS伤到了，换成原生的jekyll,然后用了他的Rakefile生成新post&lt;/p&gt;

&lt;h2 id=&quot;jekyll&quot;&gt;拥抱Jekyll&lt;/h2&gt;

&lt;h3 id=&quot;jekyll-1&quot;&gt;安装Jekyll&lt;/h3&gt;

&lt;p&gt;#gem install jekyll&lt;/p&gt;

&lt;p&gt;#jekyll new sites&lt;/p&gt;

&lt;p&gt;#cd sites&lt;/p&gt;

&lt;h3 id=&quot;post&quot;&gt;写新Post&lt;/h3&gt;
&lt;p&gt;在_post 下面生成&lt;/p&gt;

&lt;p&gt;YEAR-MONTH-DAY-title.markdown&lt;/p&gt;

&lt;p&gt;文件的开头，以以下形式书写&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
layout: post
title: &quot;Hello Jekyll&quot;
date: 2016-03-03 10:28:21 +0800 
description: &quot;&quot;
categories: 
tags: []
---
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;时间里的+0800,是时区，如果没有，会在Posts里显示不出来&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;发布&lt;/h3&gt;
&lt;p&gt;#jekyll build&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;查看效果&lt;/h3&gt;
&lt;p&gt;#jekyll serve -w&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://127.0.0.1:4000/&quot;&gt;查看结果&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 03 Mar 2016 13:41:45 +0800</pubDate>
        <link>http://j1111011.github.io/2016/03/03/jekyll.html</link>
        <guid isPermaLink="true">http://j1111011.github.io/2016/03/03/jekyll.html</guid>
        
        
      </item>
    
      <item>
        <title>Hello Jekyll</title>
        <description>&lt;h1 id=&quot;first-post-in-github-pages&quot;&gt;First Post in Github Pages&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;hello tips
good&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;##Test Yellow&lt;/p&gt;

&lt;p&gt;###Test Blue&lt;/p&gt;

&lt;p&gt;(什么鬼)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.baidu.com&quot;&gt;百度&lt;/a&gt;
&lt;code&gt;date = Yellow.now()&lt;/code&gt;
&lt;code&gt;puts date&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cdn.sspai.com/attachment/thumbnail/2014/04/15/f43f4d7659397398c499180c22c9855a10f72_mw_800_wm_1_wmp_3.jpg&quot; alt=&quot;Map&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;line1&lt;/li&gt;
  &lt;li&gt;line2
    &lt;ol&gt;
      &lt;li&gt;line3&lt;/li&gt;
      &lt;li&gt;line4&lt;/li&gt;
      &lt;li&gt;line5
&lt;strong&gt;*
**Some Things Wrong&lt;/strong&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Some Things Wrong&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 03 Mar 2016 10:28:21 +0800</pubDate>
        <link>http://j1111011.github.io/2016/03/03/hellojekyll.html</link>
        <guid isPermaLink="true">http://j1111011.github.io/2016/03/03/hellojekyll.html</guid>
        
        
      </item>
    
  </channel>
</rss>
