<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>j1111011 Pages</title>
    <description>Welcome to my sites.
</description>
    <link>http://j1111011.github.io/</link>
    <atom:link href="http://j1111011.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 17 Mar 2016 13:51:42 +0800</pubDate>
    <lastBuildDate>Thu, 17 Mar 2016 13:51:42 +0800</lastBuildDate>
    <generator>Jekyll v3.1.2</generator>
    
      <item>
        <title>Android Studio区别编译Debug|Release版本</title>
        <description>&lt;h2 id=&quot;android-studiodebugrelease&quot;&gt;Android Studio区别编译Debug|Release版本&lt;/h2&gt;

&lt;p&gt;之前用C++，系统有个预设宏，可以直接用来判断Debug,Release版本，最近在弄个Android项目，用了AS发现，Gradle还是蛮方便的，只要做如下设置&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; buildTypes {
        release {
            buildConfigField &quot;boolean&quot;, &quot;IsAlpha&quot;, &quot;false&quot;
            minifyEnabled true
            proguardFiles getDefaultProguardFile(&#39;proguard-android.txt&#39;), &#39;proguard-rules.pro&#39;
        }
        debug {
            buildConfigField &quot;boolean&quot;, &quot;IsAlpha&quot;, &quot;true&quot;
        }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在指定目录下会生成以下文件 build\generated\source\buildConfig\debug\com\example\BuildConfig.java (com\example 为你的应用包名）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public final class BuildConfig {
  public static final boolean DEBUG = Boolean.parseBoolean(&quot;true&quot;);
  public static final String APPLICATION_ID = &quot;com.example&quot;;
  public static final String BUILD_TYPE = &quot;debug&quot;;
  public static final String FLAVOR = &quot;&quot;;
  public static final int VERSION_CODE = 100;
  public static final String VERSION_NAME = &quot;&quot;;
  // Fields from build type: debug
  public static final boolean IsAlpha = true;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;设置成功之后，IsAlpha会根据你不同的编译目标，生成不同的值。你就可以在你的代码里调用&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if(BuildConfig.IsAlpha) { 
	//...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;进行区别初始化，编译APP啦&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/tt_mc/p/4277180.html&quot; title=&quot;详见参考资料&quot;&gt;参考资料&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Mar 2016 11:47:23 +0800</pubDate>
        <link>http://j1111011.github.io/build/2016/03/17/gradle-buildtypes.html</link>
        <guid isPermaLink="true">http://j1111011.github.io/build/2016/03/17/gradle-buildtypes.html</guid>
        
        <category>gradle</category>
        
        <category>android studio</category>
        
        <category>debug</category>
        
        <category>release</category>
        
        
        <category>build</category>
        
      </item>
    
      <item>
        <title>AssSDK 集成方法及环境配置 </title>
        <description>&lt;h3 id=&quot;http7xrgjrcom1z0glbclouddncomasssdk-releaseaar-aar&quot;&gt;请点击 &lt;a href=&quot;http://7xrgjr.com1.z0.glb.clouddn.com/asssdk-release.aar&quot;&gt;下载&lt;/a&gt; AAR库&lt;/h3&gt;

&lt;h3 id=&quot;aar&quot;&gt;选择导入AAR库&lt;/h3&gt;

&lt;p&gt;从Android Studio以下Menu导入库包
File-&amp;gt;New-&amp;gt;New Moudle-&amp;gt;Import .JAR/.AAR package&lt;/p&gt;

&lt;p&gt;如下图所示：&lt;/p&gt;

&lt;p&gt;图1：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xrgjr.com1.z0.glb.clouddn.com/import_arr_1.png&quot; alt=&quot;图1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图2：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xrgjr.com1.z0.glb.clouddn.com/import_arr_2.png&quot; alt=&quot;图2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;选择我们的asssdk-release.aar包，并导入&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;配置环境&lt;/h3&gt;

&lt;p&gt;在APP的gradle.build&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dependencies {
    compile fileTree(include: [&#39;*.jar&#39;], dir: &#39;libs&#39;)
    testCompile &#39;junit:junit:4.12&#39;	    
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;之中加入&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;compile &#39;com.google.code.gson:gson:2.4&#39;
compile &#39;com.mcxiaoke.volley:library:1.0.19&#39;
compile project(&#39;:asssdk-release&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在入口函数加入集成代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import com.yiba.asssdk.AssSdkSettings;
public class MainActivity extends Activity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        AssSdkSettings.setAppName(&quot;sdkdemo&quot;);
        AssSdkSettings.setAppVersion(&quot;1.0.0&quot;);
        AssSdkSettings.StartService(getApplicationContext());
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;section-1&quot;&gt;编译生成&lt;/h3&gt;
</description>
        <pubDate>Tue, 08 Mar 2016 13:52:59 +0800</pubDate>
        <link>http://j1111011.github.io/2016/03/08/easssdk-integration.html</link>
        <guid isPermaLink="true">http://j1111011.github.io/2016/03/08/easssdk-integration.html</guid>
        
        
      </item>
    
      <item>
        <title>折腾了好久，最终还是使用jekyll</title>
        <description>&lt;h2 id=&quot;section&quot;&gt;折腾&lt;/h2&gt;
&lt;p&gt;折腾了好久jekyllbootstrap，被CSS伤到了，换成原生的jekyll,然后用了他的Rakefile生成新post&lt;/p&gt;

&lt;h2 id=&quot;jekyll&quot;&gt;拥抱Jekyll&lt;/h2&gt;

&lt;h3 id=&quot;jekyll-1&quot;&gt;安装Jekyll&lt;/h3&gt;

&lt;p&gt;#gem install jekyll&lt;/p&gt;

&lt;p&gt;#jekyll new sites&lt;/p&gt;

&lt;p&gt;#cd sites&lt;/p&gt;

&lt;h3 id=&quot;post&quot;&gt;写新Post&lt;/h3&gt;
&lt;p&gt;在_post 下面生成&lt;/p&gt;

&lt;p&gt;YEAR-MONTH-DAY-title.markdown&lt;/p&gt;

&lt;p&gt;文件的开头，以以下形式书写&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
layout: post
title: &quot;Hello Jekyll&quot;
date: 2016-03-03 10:28:21 +0800 
description: &quot;&quot;
categories: 
tags: []
---
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;时间里的+0800,是时区，如果没有，会在Posts里显示不出来&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;发布&lt;/h3&gt;
&lt;p&gt;#jekyll build&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;查看效果&lt;/h3&gt;
&lt;p&gt;#jekyll serve -w&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://127.0.0.1:4000/&quot;&gt;查看结果&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 03 Mar 2016 13:41:45 +0800</pubDate>
        <link>http://j1111011.github.io/2016/03/03/jekyll.html</link>
        <guid isPermaLink="true">http://j1111011.github.io/2016/03/03/jekyll.html</guid>
        
        
      </item>
    
      <item>
        <title>Hello Jekyll</title>
        <description>&lt;h1 id=&quot;first-post-in-github-pages&quot;&gt;First Post in Github Pages&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;hello tips
good&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;##Test Yellow&lt;/p&gt;

&lt;p&gt;###Test Blue&lt;/p&gt;

&lt;p&gt;(什么鬼)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.baidu.com&quot;&gt;百度&lt;/a&gt;
&lt;code&gt;date = Yellow.now()&lt;/code&gt;
&lt;code&gt;puts date&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cdn.sspai.com/attachment/thumbnail/2014/04/15/f43f4d7659397398c499180c22c9855a10f72_mw_800_wm_1_wmp_3.jpg&quot; alt=&quot;Map&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;line1&lt;/li&gt;
  &lt;li&gt;line2
    &lt;ol&gt;
      &lt;li&gt;line3&lt;/li&gt;
      &lt;li&gt;line4&lt;/li&gt;
      &lt;li&gt;line5
&lt;strong&gt;*
**Some Things Wrong&lt;/strong&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Some Things Wrong&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 03 Mar 2016 10:28:21 +0800</pubDate>
        <link>http://j1111011.github.io/2016/03/03/hellojekyll.html</link>
        <guid isPermaLink="true">http://j1111011.github.io/2016/03/03/hellojekyll.html</guid>
        
        
      </item>
    
  </channel>
</rss>
